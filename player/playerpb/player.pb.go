// Code generated by protoc-gen-go. DO NOT EDIT.
// source: player.proto

package playerpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import reflexpb "github.com/luno/reflex/reflexpb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetPartsReq struct {
	RoundId              int64    `protobuf:"varint,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPartsReq) Reset()         { *m = GetPartsReq{} }
func (m *GetPartsReq) String() string { return proto.CompactTextString(m) }
func (*GetPartsReq) ProtoMessage()    {}
func (*GetPartsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_9c6c2131ee52060f, []int{0}
}
func (m *GetPartsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartsReq.Unmarshal(m, b)
}
func (m *GetPartsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartsReq.Marshal(b, m, deterministic)
}
func (dst *GetPartsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartsReq.Merge(dst, src)
}
func (m *GetPartsReq) XXX_Size() int {
	return xxx_messageInfo_GetPartsReq.Size(m)
}
func (m *GetPartsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartsReq proto.InternalMessageInfo

func (m *GetPartsReq) GetRoundId() int64 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

type GetPartsResp struct {
	Parts                []*Part  `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPartsResp) Reset()         { *m = GetPartsResp{} }
func (m *GetPartsResp) String() string { return proto.CompactTextString(m) }
func (*GetPartsResp) ProtoMessage()    {}
func (*GetPartsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_9c6c2131ee52060f, []int{1}
}
func (m *GetPartsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartsResp.Unmarshal(m, b)
}
func (m *GetPartsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartsResp.Marshal(b, m, deterministic)
}
func (dst *GetPartsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartsResp.Merge(dst, src)
}
func (m *GetPartsResp) XXX_Size() int {
	return xxx_messageInfo_GetPartsResp.Size(m)
}
func (m *GetPartsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartsResp proto.InternalMessageInfo

func (m *GetPartsResp) GetParts() []*Part {
	if m != nil {
		return m.Parts
	}
	return nil
}

type GetRankReq struct {
	RoundId              int64    `protobuf:"varint,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRankReq) Reset()         { *m = GetRankReq{} }
func (m *GetRankReq) String() string { return proto.CompactTextString(m) }
func (*GetRankReq) ProtoMessage()    {}
func (*GetRankReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_9c6c2131ee52060f, []int{2}
}
func (m *GetRankReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRankReq.Unmarshal(m, b)
}
func (m *GetRankReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRankReq.Marshal(b, m, deterministic)
}
func (dst *GetRankReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRankReq.Merge(dst, src)
}
func (m *GetRankReq) XXX_Size() int {
	return xxx_messageInfo_GetRankReq.Size(m)
}
func (m *GetRankReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRankReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRankReq proto.InternalMessageInfo

func (m *GetRankReq) GetRoundId() int64 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

type GetRankResp struct {
	Rank                 int32    `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRankResp) Reset()         { *m = GetRankResp{} }
func (m *GetRankResp) String() string { return proto.CompactTextString(m) }
func (*GetRankResp) ProtoMessage()    {}
func (*GetRankResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_9c6c2131ee52060f, []int{3}
}
func (m *GetRankResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRankResp.Unmarshal(m, b)
}
func (m *GetRankResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRankResp.Marshal(b, m, deterministic)
}
func (dst *GetRankResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRankResp.Merge(dst, src)
}
func (m *GetRankResp) XXX_Size() int {
	return xxx_messageInfo_GetRankResp.Size(m)
}
func (m *GetRankResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRankResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRankResp proto.InternalMessageInfo

func (m *GetRankResp) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

type Part struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId           int64                `protobuf:"varint,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Player               string               `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Status               int32                `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Part) Reset()         { *m = Part{} }
func (m *Part) String() string { return proto.CompactTextString(m) }
func (*Part) ProtoMessage()    {}
func (*Part) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_9c6c2131ee52060f, []int{4}
}
func (m *Part) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Part.Unmarshal(m, b)
}
func (m *Part) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Part.Marshal(b, m, deterministic)
}
func (dst *Part) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Part.Merge(dst, src)
}
func (m *Part) XXX_Size() int {
	return xxx_messageInfo_Part.Size(m)
}
func (m *Part) XXX_DiscardUnknown() {
	xxx_messageInfo_Part.DiscardUnknown(m)
}

var xxx_messageInfo_Part proto.InternalMessageInfo

func (m *Part) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Part) GetExternalId() int64 {
	if m != nil {
		return m.ExternalId
	}
	return 0
}

func (m *Part) GetPlayer() string {
	if m != nil {
		return m.Player
	}
	return ""
}

func (m *Part) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Part) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Part) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*GetPartsReq)(nil), "playerpb.GetPartsReq")
	proto.RegisterType((*GetPartsResp)(nil), "playerpb.GetPartsResp")
	proto.RegisterType((*GetRankReq)(nil), "playerpb.GetRankReq")
	proto.RegisterType((*GetRankResp)(nil), "playerpb.GetRankResp")
	proto.RegisterType((*Part)(nil), "playerpb.Part")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayerClient is the client API for Player service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerClient interface {
	StreamRoundEvents(ctx context.Context, in *reflexpb.StreamRequest, opts ...grpc.CallOption) (Player_StreamRoundEventsClient, error)
	GetParts(ctx context.Context, in *GetPartsReq, opts ...grpc.CallOption) (*GetPartsResp, error)
	GetRank(ctx context.Context, in *GetRankReq, opts ...grpc.CallOption) (*GetRankResp, error)
}

type playerClient struct {
	cc *grpc.ClientConn
}

func NewPlayerClient(cc *grpc.ClientConn) PlayerClient {
	return &playerClient{cc}
}

func (c *playerClient) StreamRoundEvents(ctx context.Context, in *reflexpb.StreamRequest, opts ...grpc.CallOption) (Player_StreamRoundEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Player_serviceDesc.Streams[0], "/playerpb.Player/StreamRoundEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &playerStreamRoundEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Player_StreamRoundEventsClient interface {
	Recv() (*reflexpb.Event, error)
	grpc.ClientStream
}

type playerStreamRoundEventsClient struct {
	grpc.ClientStream
}

func (x *playerStreamRoundEventsClient) Recv() (*reflexpb.Event, error) {
	m := new(reflexpb.Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *playerClient) GetParts(ctx context.Context, in *GetPartsReq, opts ...grpc.CallOption) (*GetPartsResp, error) {
	out := new(GetPartsResp)
	err := c.cc.Invoke(ctx, "/playerpb.Player/GetParts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) GetRank(ctx context.Context, in *GetRankReq, opts ...grpc.CallOption) (*GetRankResp, error) {
	out := new(GetRankResp)
	err := c.cc.Invoke(ctx, "/playerpb.Player/GetRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerServer is the server API for Player service.
type PlayerServer interface {
	StreamRoundEvents(*reflexpb.StreamRequest, Player_StreamRoundEventsServer) error
	GetParts(context.Context, *GetPartsReq) (*GetPartsResp, error)
	GetRank(context.Context, *GetRankReq) (*GetRankResp, error)
}

func RegisterPlayerServer(s *grpc.Server, srv PlayerServer) {
	s.RegisterService(&_Player_serviceDesc, srv)
}

func _Player_StreamRoundEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(reflexpb.StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PlayerServer).StreamRoundEvents(m, &playerStreamRoundEventsServer{stream})
}

type Player_StreamRoundEventsServer interface {
	Send(*reflexpb.Event) error
	grpc.ServerStream
}

type playerStreamRoundEventsServer struct {
	grpc.ServerStream
}

func (x *playerStreamRoundEventsServer) Send(m *reflexpb.Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Player_GetParts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GetParts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/playerpb.Player/GetParts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GetParts(ctx, req.(*GetPartsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_GetRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRankReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GetRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/playerpb.Player/GetRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GetRank(ctx, req.(*GetRankReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Player_serviceDesc = grpc.ServiceDesc{
	ServiceName: "playerpb.Player",
	HandlerType: (*PlayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetParts",
			Handler:    _Player_GetParts_Handler,
		},
		{
			MethodName: "GetRank",
			Handler:    _Player_GetRank_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamRoundEvents",
			Handler:       _Player_StreamRoundEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "player.proto",
}

func init() { proto.RegisterFile("player.proto", fileDescriptor_player_9c6c2131ee52060f) }

var fileDescriptor_player_9c6c2131ee52060f = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x86, 0xbb, 0xf9, 0x6a, 0x3a, 0xa9, 0x8a, 0x58, 0xd1, 0x62, 0x7c, 0x69, 0xb0, 0x90, 0xf0,
	0x01, 0x6d, 0x50, 0xe0, 0x00, 0xe2, 0x94, 0x03, 0xaa, 0x7a, 0xab, 0x16, 0xee, 0xd5, 0xba, 0x9e,
	0x06, 0xab, 0xfe, 0xd8, 0xee, 0x8e, 0x51, 0xf9, 0x7b, 0xfc, 0x0f, 0xfe, 0x0b, 0xda, 0x0f, 0x13,
	0x2a, 0x55, 0xca, 0x29, 0xfb, 0xce, 0x3c, 0xef, 0x64, 0x3c, 0x2f, 0x1c, 0xeb, 0x5a, 0xfd, 0x42,
	0x23, 0xb4, 0xe9, 0xa8, 0xe3, 0xf3, 0xa0, 0x74, 0x91, 0xbe, 0xdb, 0x56, 0xf4, 0xa3, 0x2f, 0xc4,
	0x4d, 0xd7, 0xac, 0xea, 0xbe, 0xed, 0x56, 0x06, 0x6f, 0x6b, 0x7c, 0x88, 0x3f, 0xba, 0x88, 0x8f,
	0xe0, 0x4b, 0xcf, 0xb7, 0x5d, 0xb7, 0xad, 0x71, 0xe5, 0x55, 0xd1, 0xdf, 0xae, 0xa8, 0x6a, 0xd0,
	0x92, 0x6a, 0x74, 0x00, 0xb2, 0x1c, 0x16, 0x17, 0x48, 0x57, 0xca, 0x90, 0x95, 0x78, 0xcf, 0x5f,
	0xc1, 0xdc, 0x74, 0x7d, 0x5b, 0x5e, 0x57, 0x65, 0xc2, 0x96, 0x2c, 0x1f, 0xcb, 0x43, 0xaf, 0x2f,
	0xcb, 0xec, 0x23, 0x1c, 0xef, 0x48, 0xab, 0xf9, 0x1b, 0x98, 0x6a, 0x27, 0x12, 0xb6, 0x1c, 0xe7,
	0x8b, 0xf5, 0x89, 0x18, 0x56, 0x14, 0x8e, 0x91, 0xa1, 0x99, 0xbd, 0x05, 0xb8, 0x40, 0x92, 0xaa,
	0xbd, 0xdb, 0x33, 0xfe, 0xb5, 0x5f, 0x24, 0x80, 0x56, 0x73, 0x0e, 0x13, 0xa3, 0xda, 0x3b, 0x4f,
	0x4d, 0xa5, 0x7f, 0x67, 0x7f, 0x18, 0x4c, 0xdc, 0x6c, 0x7e, 0x02, 0xa3, 0x7f, 0x03, 0x46, 0x55,
	0xc9, 0xcf, 0x61, 0x81, 0x0f, 0x84, 0xa6, 0x55, 0xb5, 0x9b, 0x3c, 0xf2, 0x0d, 0x18, 0x4a, 0x97,
	0x25, 0x3f, 0x83, 0x59, 0xd8, 0x2e, 0x19, 0x2f, 0x59, 0x7e, 0x24, 0xa3, 0x72, 0x75, 0x4b, 0x8a,
	0x7a, 0x9b, 0x4c, 0xfc, 0xff, 0x44, 0xc5, 0x3f, 0x03, 0xdc, 0x18, 0x54, 0x84, 0xe5, 0xb5, 0xa2,
	0x64, 0xba, 0x64, 0xf9, 0x62, 0x9d, 0x8a, 0x70, 0x4b, 0x31, 0xdc, 0x52, 0x7c, 0x1f, 0x6e, 0x29,
	0x8f, 0x22, 0xbd, 0x21, 0x67, 0xed, 0x75, 0x39, 0x58, 0x67, 0xfb, 0xad, 0x91, 0xde, 0xd0, 0xfa,
	0x37, 0x83, 0xd9, 0x55, 0x58, 0x6c, 0x03, 0xcf, 0xbf, 0x91, 0x41, 0xd5, 0x48, 0x77, 0x9e, 0xaf,
	0x3f, 0xb1, 0x25, 0xcb, 0x5f, 0x8a, 0x21, 0x64, 0x11, 0x9b, 0x78, 0xdf, 0xa3, 0xa5, 0xf4, 0xd9,
	0xae, 0xe1, 0xd1, 0xec, 0xe0, 0x3d, 0xe3, 0x5f, 0x60, 0x3e, 0xe4, 0xc5, 0x4f, 0x77, 0xe1, 0xfc,
	0x97, 0x76, 0x7a, 0xf6, 0x54, 0xd9, 0xea, 0xec, 0x80, 0x7f, 0x82, 0xc3, 0x98, 0x06, 0x7f, 0xf1,
	0x08, 0x8a, 0x49, 0xa6, 0xa7, 0x4f, 0x54, 0x9d, 0xb3, 0x98, 0xf9, 0x6f, 0xfc, 0xf0, 0x37, 0x00,
	0x00, 0xff, 0xff, 0xc3, 0x38, 0xb4, 0xce, 0xc0, 0x02, 0x00, 0x00,
}
